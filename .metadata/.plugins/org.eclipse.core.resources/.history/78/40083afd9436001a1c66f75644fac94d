package io;

import java.awt.Container;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class TryNotepad extends JFrame implements ActionListener{
	private JTextArea area;
	private MenuPane menu;
	private File file;
	
	public TryNotepad() {
		
		area = new JTextArea();
		JScrollPane scroll = new JScrollPane(area);
		area.setFont(new Font("고딕체", Font.BOLD, 20));
		
		menu = new MenuPane();
		this.setJMenuBar(menu);
		
		
		Container con = getContentPane();
		con.add(scroll);
		
		this.event();
		
		setTitle("간단 메모장");
		setBounds(900, 200, 600, 500);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	
	public void event() {
		menu.getNewM().addActionListener(this);
		menu.getOpenM().addActionListener(this);
		menu.getSaveM().addActionListener(this);
		menu.getExitM().addActionListener(this);
		menu.getCutM().addActionListener(this);
		menu.getCopyM().addActionListener(this);
		menu.getPasteM().addActionListener(this);
	
	}


	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getActionCommand().equals("새로만들기")) {
			area.setText("");
		}else if(e.getActionCommand().equals("열기")) {
			openDialog();//열기 다이얼로그
			fileRead();//파일 읽기
			
		}else if(e.getActionCommand().equals("저장")) {
			saveDialog();
			fileWrite();
			
		}else if(e.getActionCommand().equals("종료")) {
			int result = JOptionPane.showConfirmDialog(this, "저장하시겠습니까?", "메모장", JOptionPane.YES_NO_CANCEL_OPTION);
			if(result == JOptionPane.YES_OPTION) {
				saveDialog();
				fileWrite();
				System.exit(0);
			}else if(result == JOptionPane.NO_OPTION) {
				System.exit(0);
			}
		}else if(e.getActionCommand().equals("잘라내기")) {
			area.cut();
		}else if(e.getActionCommand().equals("복사")) {
			area.copy();
		}else if(e.getActionCommand().equals("붙여넣기")) {
			area.paste();
		}
		
	}


	private void saveDialog() {
		JFileChooser chooser = new JFileChooser();
		int result = chooser.showSaveDialog(this);
		
		if(result == JFileChooser.APPROVE_OPTION) {
			file = chooser.getSelectedFile();
		}
	}

	public void openDialog() {
		JFileChooser chooser = new JFileChooser();
		int result = chooser.showOpenDialog(this);
		
		if(result == JFileChooser.APPROVE_OPTION) {
			//선택한 파일의 경로와 이름
			file = chooser.getSelectedFile();
		}
	}
	
	private void fileWrite() {
		try {
			BufferedWriter bw = new BufferedWriter(new FileWriter(file));
			bw.write(area.getText());
			
			bw.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
		
	public void fileRead() {
		area.setText("");
		if(file==null) return;
		try {
			BufferedReader br = new BufferedReader(new FileReader(file));
			String line;
			while((line = br.readLine()) != null) {
				area.append(line+"\n");
			}
			br.close();
		} catch (IOException e) {
			e.printStackTrace();
		}	
	}


	public static void main(String[] args) {
		new TryNotepad();
		
		
	}
}
