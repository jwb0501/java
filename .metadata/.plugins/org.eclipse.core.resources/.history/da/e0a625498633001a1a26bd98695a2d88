package swing;

import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JButton;
import javax.swing.JFrame;

public class Timer extends JFrame implements ActionListener, Runnable {
	private JButton startBtn, stopBtn;
	private boolean sw = true;
	private static int time =1;

	public Timer() {
		startBtn = new JButton("Ω√¿€");
		stopBtn = new JButton("∏ÿ√„");

		Panel p = new Panel(new GridLayout(2,1,0,10));
		p.add(startBtn);
		p.add(stopBtn);

		Container con = this.getContentPane();
		con.add("East", p);

		startBtn.addActionListener(this);
		stopBtn.addActionListener(this);
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});


		setBounds(900, 300, 200, 200);
		setVisible(true);

	}

	@Override
	public void run() {
		if(time==20) time=1;
		
		for(int i = time;i<=21;i++) {
			if(!sw) break;
			repaint();
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			time =i;
		}
		startBtn.setEnabled(true);
		stopBtn.setEnabled(false);
	}

	@Override
	public void paint(Graphics g) {
		g.setColor(Color.WHITE);
		g.fillRect(0, 0, 200, 200);
		g.setColor(Color.BLACK);
		g.drawString(Integer.toString(time), 50, 50);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == startBtn) {
			sw=true;
			new Thread(this).start();
			startBtn.setEnabled(false);
			stopBtn.setEnabled(true);
		} else if (e.getSource() == stopBtn) {
			sw=false;
			time=1;
			startBtn.setEnabled(true);
			stopBtn.setEnabled(false);
		}

	}

	public static void main(String[] args) {
		new Timer();

	}
}
